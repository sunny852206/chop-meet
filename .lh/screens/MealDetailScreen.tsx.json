{
    "sourceFile": "screens/MealDetailScreen.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1748561916012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748563366017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+// screens/MealDetailScreen.tsx\n+import React from 'react';\n+import { View, Text, Button, StyleSheet } from 'react-native';\n+import { useNavigation, useRoute } from '@react-navigation/native';\n+import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n+import type { RouteProp } from \"@react-navigation/native\";\n+import type { RootStackParamList } from \"../types\";\n+\n+\n+type DetailNav = NativeStackNavigationProp<RootStackParamList, \"MealDetail\">;\n+type DetailRoute = RouteProp<RootStackParamList, \"MealDetail\">;\n+\n+export default function MealDetailScreen() {\n+  const navigation = useNavigation<DetailNav>();\n+  const route = useRoute<DetailRoute>();\n+  const meal = route.params.meal;\n+\n+  if (!meal) {  \n+    return <Text>Meal not found.</Text>;\n+  }\n+\n+  return (\n+    <View style={styles.container}>\n+      <Text style={styles.title}>{meal.restaurant}</Text>\n+      <Text>Time: {meal.time}</Text>\n+      <Text>Cuisine: {meal.cuisine}</Text>\n+      <Text>Type: {meal.type === 'meal' ? 'Meal Buddy' : 'Open to More'}</Text>\n+      <Text>üë• {meal.people} / {meal.max} people</Text>\n+\n+      <View style={{ marginTop: 20 }}>\n+        <Button title=\"Join this Meal\" onPress={() => alert(\"Joined successfully!\")} />\n+        <Button\n+          title=\"Enter Chat Room\"\n+          onPress={() => navigation.navigate('ChatRoom', { mealId: meal.id })}\n+        />\n+      </View>\n+    </View>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: { padding: 24 },\n+  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 8 }\n+});\n"
                },
                {
                    "date": 1748563387751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,12 @@\n import { View, Text, Button, StyleSheet } from 'react-native';\n import { useNavigation, useRoute } from '@react-navigation/native';\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n import type { RouteProp } from \"@react-navigation/native\";\n-import type { RootStackParamList } from \"../types\";\n+import type { Meal, RootStackParamList } from \"../types\";\n \n \n+\n type DetailNav = NativeStackNavigationProp<RootStackParamList, \"MealDetail\">;\n type DetailRoute = RouteProp<RootStackParamList, \"MealDetail\">;\n \n export default function MealDetailScreen() {\n@@ -41,47 +42,4 @@\n const styles = StyleSheet.create({\n   container: { padding: 24 },\n   title: { fontSize: 24, fontWeight: 'bold', marginBottom: 8 }\n });\n-// screens/MealDetailScreen.tsx\n-import React from 'react';\n-import { View, Text, Button, StyleSheet } from 'react-native';\n-import { useNavigation, useRoute } from '@react-navigation/native';\n-import { useNavigation } from \"@react-navigation/native\";\n-import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n-import type { RootStackParamList } from \"../navigation/RootStackParamList\";\n-\n-type NavProp = NativeStackNavigationProp<RootStackParamList, \"MealList\">;\n-const navigation = useNavigation<NavProp>();\n-\n-export default function MealDetailScreen() {\n-  const navigation = useNavigation();\n-  const route = useRoute<any>();\n-  const meal = route.params?.meal;\n-\n-  if (!meal) {\n-    return <Text>Meal not found.</Text>;\n-  }\n-\n-  return (\n-    <View style={styles.container}>\n-      <Text style={styles.title}>{meal.restaurant}</Text>\n-      <Text>Time: {meal.time}</Text>\n-      <Text>Cuisine: {meal.cuisine}</Text>\n-      <Text>Type: {meal.type === 'meal' ? 'Meal Buddy' : 'Open to More'}</Text>\n-      <Text>üë• {meal.people} / {meal.max} people</Text>\n-\n-      <View style={{ marginTop: 20 }}>\n-        <Button title=\"Join this Meal\" onPress={() => alert(\"Joined successfully!\")} />\n-        <Button\n-          title=\"Enter Chat Room\"\n-          onPress={() => navigation.navigate('ChatRoom', { mealId: meal.id })}\n-        />\n-      </View>\n-    </View>\n-  );\n-}\n-\n-const styles = StyleSheet.create({\n-  container: { padding: 24 },\n-  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 8 }\n-});\n"
                },
                {
                    "date": 1748563395132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,11 @@\n import { View, Text, Button, StyleSheet } from 'react-native';\n import { useNavigation, useRoute } from '@react-navigation/native';\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n import type { RouteProp } from \"@react-navigation/native\";\n-import type { Meal, RootStackParamList } from \"../types\";\n+import type { RootStackParamList } from \"../types\";\n \n \n-\n type DetailNav = NativeStackNavigationProp<RootStackParamList, \"MealDetail\">;\n type DetailRoute = RouteProp<RootStackParamList, \"MealDetail\">;\n \n export default function MealDetailScreen() {\n"
                },
                {
                    "date": 1748564206415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   }\n \n   return (\n     <View style={styles.container}>\n-      <Text style={styles.title}>{meal.restaurant}</Text>\n+      <Text style={styles.title}>{meal.title}</Text>\n       <Text>Time: {meal.time}</Text>\n       <Text>Cuisine: {meal.cuisine}</Text>\n       <Text>Type: {meal.type === 'meal' ? 'Meal Buddy' : 'Open to More'}</Text>\n       <Text>üë• {meal.people} / {meal.max} people</Text>\n"
                },
                {
                    "date": 1748638117518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,44 +1,84 @@\n // screens/MealDetailScreen.tsx\n-import React from 'react';\n-import { View, Text, Button, StyleSheet } from 'react-native';\n+import React, { useEffect, useState } from 'react';\n+import {\n+  View,\n+  Text,\n+  Button,\n+  StyleSheet,\n+  Alert,\n+  ActivityIndicator,\n+} from 'react-native';\n import { useNavigation, useRoute } from '@react-navigation/native';\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n import type { RouteProp } from \"@react-navigation/native\";\n+import AsyncStorage from '@react-native-async-storage/async-storage';\n import type { RootStackParamList } from \"../types\";\n \n-\n type DetailNav = NativeStackNavigationProp<RootStackParamList, \"MealDetail\">;\n type DetailRoute = RouteProp<RootStackParamList, \"MealDetail\">;\n \n export default function MealDetailScreen() {\n   const navigation = useNavigation<DetailNav>();\n   const route = useRoute<DetailRoute>();\n   const meal = route.params.meal;\n \n-  if (!meal) {  \n-    return <Text>Meal not found.</Text>;\n-  }\n+  const [hasJoined, setHasJoined] = useState(false);\n+  const [loading, setLoading] = useState(true);\n \n+  const joinedKey = `joined_${meal.id}`;\n+\n+  useEffect(() => {\n+    // Ê™¢Êü•ÊòØÂê¶Â∑≤Âä†ÂÖ•ÈÅéÈÄôÂÄã meal\n+    const checkJoined = async () => {\n+      const value = await AsyncStorage.getItem(joinedKey);\n+      setHasJoined(value === 'true');\n+      setLoading(false);\n+    };\n+    checkJoined();\n+  }, []);\n+\n+  const handleJoin = async () => {\n+    if (meal.people >= meal.max) {\n+      Alert.alert(\"Sorry\", \"This meal is already full.\");\n+      return;\n+    }\n+\n+    await AsyncStorage.setItem(joinedKey, 'true');\n+    setHasJoined(true);\n+    Alert.alert(\"Success\", \"You have joined the meal!\");\n+    // üëâ ÂØ¶ÈöõÊÉÖÊ≥Å‰Ω†ÊáâË©≤ÈÇÑË¶ÅÊõ¥Êñ∞ people Êï∏ÈáèÔºàÊúÄÂ•ΩÂæûÂæåÁ´ØÊàñ context Êõ¥Êñ∞Ôºâ\n+  };\n+\n+  if (!meal) return <Text>Meal not found.</Text>;\n+  if (loading) return <ActivityIndicator size=\"large\" />;\n+\n   return (\n     <View style={styles.container}>\n       <Text style={styles.title}>{meal.title}</Text>\n       <Text>Time: {meal.time}</Text>\n       <Text>Cuisine: {meal.cuisine}</Text>\n-      <Text>Type: {meal.type === 'meal' ? 'Meal Buddy' : 'Open to More'}</Text>\n+      <Text>Type: {meal.mealType === \"Meal Buddy\" ? \"üçú Meal Buddy\" : \"‚ù§Ô∏è Open to More\"}</Text>\n       <Text>üë• {meal.people} / {meal.max} people</Text>\n \n       <View style={{ marginTop: 20 }}>\n-        <Button title=\"Join this Meal\" onPress={() => alert(\"Joined successfully!\")} />\n-        <Button\n-          title=\"Enter Chat Room\"\n-          onPress={() => navigation.navigate('ChatRoom', { mealId: meal.id })}\n-        />\n+        {!hasJoined ? (\n+          <Button\n+            title={meal.people >= meal.max ? \"Full\" : \"Join this Meal\"}\n+            onPress={handleJoin}\n+            disabled={meal.people >= meal.max}\n+          />\n+        ) : (\n+          <Button\n+            title=\"Enter Chat Room\"\n+            onPress={() => navigation.navigate('ChatRoom', { mealId: meal.id })}\n+          />\n+        )}\n       </View>\n     </View>\n   );\n }\n \n const styles = StyleSheet.create({\n   container: { padding: 24 },\n-  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 8 }\n+  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 8 },\n });\n"
                },
                {
                    "date": 1748648700031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,84 +1,186 @@\n-// screens/MealDetailScreen.tsx\n-import React, { useEffect, useState } from 'react';\n import {\n   View,\n   Text,\n-  Button,\n   StyleSheet,\n+  FlatList,\n+  Pressable,\n   Alert,\n   ActivityIndicator,\n-} from 'react-native';\n-import { useNavigation, useRoute } from '@react-navigation/native';\n+  RefreshControl,\n+} from \"react-native\";\n+import { useEffect, useState } from \"react\";\n+import { useNavigation } from \"@react-navigation/native\";\n+import AsyncStorage from \"@react-native-async-storage/async-storage\";\n+import { db } from \"../firebase\";\n+import { ref, onValue } from \"firebase/database\";\n+import type { Meal } from \"../types\";\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n-import type { RouteProp } from \"@react-navigation/native\";\n-import AsyncStorage from '@react-native-async-storage/async-storage';\n import type { RootStackParamList } from \"../types\";\n+import Toast from \"react-native-toast-message\";\n \n-type DetailNav = NativeStackNavigationProp<RootStackParamList, \"MealDetail\">;\n-type DetailRoute = RouteProp<RootStackParamList, \"MealDetail\">;\n+export default function MealListScreen() {\n+  const [meals, setMeals] = useState<Meal[]>([]);\n+  const [filter, setFilter] = useState<\"Meal Buddy\" | \"Open to More\">(\"Meal Buddy\");\n+  const [userId, setUserId] = useState<string | null>(null);\n+  const [refreshing, setRefreshing] = useState(false);\n+  const [loading, setLoading] = useState(true);\n \n-export default function MealDetailScreen() {\n-  const navigation = useNavigation<DetailNav>();\n-  const route = useRoute<DetailRoute>();\n-  const meal = route.params.meal;\n+  const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();\n \n-  const [hasJoined, setHasJoined] = useState(false);\n-  const [loading, setLoading] = useState(true);\n+  useEffect(() => {\n+    const fetchUser = async () => {\n+      let id = await AsyncStorage.getItem(\"userId\");\n+      if (!id) {\n+        id = `user-${Date.now()}`;\n+        await AsyncStorage.setItem(\"userId\", id);\n+      }\n+      setUserId(id);\n+    };\n \n-  const joinedKey = `joined_${meal.id}`;\n+    fetchUser();\n+  }, []);\n \n   useEffect(() => {\n-    // Ê™¢Êü•ÊòØÂê¶Â∑≤Âä†ÂÖ•ÈÅéÈÄôÂÄã meal\n-    const checkJoined = async () => {\n-      const value = await AsyncStorage.getItem(joinedKey);\n-      setHasJoined(value === 'true');\n+    const mealRef = ref(db, \"meals\");\n+    const unsubscribe = onValue(mealRef, (snapshot) => {\n+      const data = snapshot.val();\n+      if (data) {\n+        const mealArray = Object.values(data);\n+        setMeals(mealArray as Meal[]);\n+      } else {\n+        setMeals([]);\n+      }\n       setLoading(false);\n-    };\n-    checkJoined();\n+    });\n+\n+    return () => unsubscribe();\n   }, []);\n \n-  const handleJoin = async () => {\n-    if (meal.people >= meal.max) {\n-      Alert.alert(\"Sorry\", \"This meal is already full.\");\n-      return;\n-    }\n+  const filteredMeals = meals.filter((m) => m.mealType === filter);\n \n-    await AsyncStorage.setItem(joinedKey, 'true');\n-    setHasJoined(true);\n-    Alert.alert(\"Success\", \"You have joined the meal!\");\n-    // üëâ ÂØ¶ÈöõÊÉÖÊ≥Å‰Ω†ÊáâË©≤ÈÇÑË¶ÅÊõ¥Êñ∞ people Êï∏ÈáèÔºàÊúÄÂ•ΩÂæûÂæåÁ´ØÊàñ context Êõ¥Êñ∞Ôºâ\n+  const handleJoin = (meal: Meal) => {\n+    Alert.alert(\"Joined!\", \"You‚Äôve joined this meal event üéâ\");\n+    navigation.navigate(\"ChatRoom\", { mealId: meal.id });\n   };\n \n-  if (!meal) return <Text>Meal not found.</Text>;\n-  if (loading) return <ActivityIndicator size=\"large\" />;\n+  const handleAddMeal = (newMeal: Meal) => {\n+    setMeals((prev) => [...prev, newMeal]);\n+  };\n \n+  const onRefresh = async () => {\n+    setRefreshing(true);\n+    setTimeout(() => {\n+      setRefreshing(false);\n+      Toast.show({ type: \"success\", text1: \"List refreshed ‚úÖ\", visibilityTime: 1500 });\n+    }, 800);\n+  };\n+\n   return (\n     <View style={styles.container}>\n-      <Text style={styles.title}>{meal.title}</Text>\n-      <Text>Time: {meal.time}</Text>\n-      <Text>Cuisine: {meal.cuisine}</Text>\n-      <Text>Type: {meal.mealType === \"Meal Buddy\" ? \"üçú Meal Buddy\" : \"‚ù§Ô∏è Open to More\"}</Text>\n-      <Text>üë• {meal.people} / {meal.max} people</Text>\n+      <Text style={styles.title}>üçΩÔ∏è Explore Meal Events</Text>\n \n-      <View style={{ marginTop: 20 }}>\n-        {!hasJoined ? (\n-          <Button\n-            title={meal.people >= meal.max ? \"Full\" : \"Join this Meal\"}\n-            onPress={handleJoin}\n-            disabled={meal.people >= meal.max}\n-          />\n-        ) : (\n-          <Button\n-            title=\"Enter Chat Room\"\n-            onPress={() => navigation.navigate('ChatRoom', { mealId: meal.id })}\n-          />\n-        )}\n+      <View style={styles.toggleContainer}>\n+        <Pressable\n+          style={[styles.toggleButton, filter === \"Meal Buddy\" && styles.activeToggle]}\n+          onPress={() => setFilter(\"Meal Buddy\")}\n+        >\n+          <Text>üçú Meal Buddy</Text>\n+        </Pressable>\n+        <Pressable\n+          style={[styles.toggleButton, filter === \"Open to More\" && styles.activeToggle]}\n+          onPress={() => setFilter(\"Open to More\")}\n+        >\n+          <Text>‚ù§Ô∏è Open to More</Text>\n+        </Pressable>\n       </View>\n+\n+      {loading ? (\n+        <ActivityIndicator size=\"large\" color=\"#007aff\" style={{ marginTop: 40 }} />\n+      ) : (\n+        <FlatList\n+          data={filteredMeals}\n+          keyExtractor={(item) => item.id}\n+          refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\n+          renderItem={({ item }) => (\n+            <View style={styles.mealCard}>\n+              <Text style={styles.mealTitle}>{item.title}</Text>\n+              <Text>üìç {item.location}</Text>\n+              <Text>üìÖ {item.date}</Text>\n+              <Text>‚è∞ {item.time}</Text>\n+              <Text>üí∞ {item.budget}</Text>\n+              <Text>üçΩÔ∏è {item.cuisine}</Text>\n+              <Text>üë• {item.people} / {item.max} people</Text>\n+\n+              <Pressable\n+                style={[\n+                  styles.joinButton,\n+                  item.people >= item.max && { backgroundColor: \"#ccc\" },\n+                ]}\n+                disabled={item.people >= item.max}\n+                onPress={() => handleJoin(item)}\n+              >\n+                <Text style={styles.joinButtonText}>\n+                  {item.people >= item.max ? \"Full\" : \"Join\"}\n+                </Text>\n+              </Pressable>\n+            </View>\n+          )}\n+        />\n+      )}\n+\n+      <Pressable\n+        style={styles.createButton}\n+        onPress={() => {\n+          if (userId) {\n+            navigation.navigate(\"CreateMeal\", {\n+              addMeal: handleAddMeal,\n+              userId,\n+            });\n+          }\n+        }}\n+      >\n+        <Text style={styles.createButtonText}>Ôºã Create Meal Event</Text>\n+      </Pressable>\n     </View>\n   );\n }\n \n const styles = StyleSheet.create({\n-  container: { padding: 24 },\n-  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 8 },\n+  container: { flex: 1, padding: 16, paddingTop: 40, backgroundColor: \"#fff\" },\n+  title: { fontSize: 24, fontWeight: \"bold\", marginBottom: 16 },\n+  toggleContainer: { flexDirection: \"row\", justifyContent: \"center\", gap: 10, marginBottom: 16 },\n+  toggleButton: {\n+    padding: 10,\n+    borderWidth: 1,\n+    borderColor: \"#ccc\",\n+    borderRadius: 8,\n+  },\n+  activeToggle: { backgroundColor: \"#d0ebff\" },\n+  mealCard: {\n+    backgroundColor: \"#f0f0f0\",\n+    padding: 16,\n+    borderRadius: 10,\n+    marginBottom: 12,\n+  },\n+  mealTitle: { fontSize: 16, fontWeight: \"600\", marginBottom: 4 },\n+  joinButton: {\n+    marginTop: 10,\n+    backgroundColor: \"#007aff\",\n+    paddingVertical: 8,\n+    borderRadius: 8,\n+    alignItems: \"center\",\n+  },\n+  joinButtonText: { color: \"#fff\", fontWeight: \"600\" },\n+  createButton: {\n+    backgroundColor: \"#ff7f50\",\n+    padding: 14,\n+    borderRadius: 10,\n+    alignItems: \"center\",\n+    marginTop: 16,\n+  },\n+  createButtonText: {\n+    color: \"#fff\",\n+    fontSize: 16,\n+    fontWeight: \"600\",\n+  },\n });\n"
                },
                {
                    "date": 1749534168542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n import type { Meal } from \"../types\";\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n import type { RootStackParamList } from \"../types\";\n import Toast from \"react-native-toast-message\";\n+import { isHtmlElement } from \"react-router-dom/dist/dom\";\n \n export default function MealListScreen() {\n   const [meals, setMeals] = useState<Meal[]>([]);\n   const [filter, setFilter] = useState<\"Meal Buddy\" | \"Open to More\">(\"Meal Buddy\");\n@@ -59,9 +60,9 @@\n   const filteredMeals = meals.filter((m) => m.mealType === filter);\n \n   const handleJoin = (meal: Meal) => {\n     Alert.alert(\"Joined!\", \"You‚Äôve joined this meal event üéâ\");\n-    navigation.navigate(\"ChatRoom\", { mealId: meal.id });\n+    navigation.navigate(\"ChatRoom\", { mealId: meal.id, mealTitle: item.title,});\n   };\n \n   const handleAddMeal = (newMeal: Meal) => {\n     setMeals((prev) => [...prev, newMeal]);\n"
                },
                {
                    "date": 1749534216051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,13 +16,12 @@\n import type { Meal } from \"../types\";\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n import type { RootStackParamList } from \"../types\";\n import Toast from \"react-native-toast-message\";\n-import { isHtmlElement } from \"react-router-dom/dist/dom\";\n \n export default function MealListScreen() {\n   const [meals, setMeals] = useState<Meal[]>([]);\n-  const [filter, setFilter] = useState<\"Meal Buddy\" | \"Open to More\">(\"Meal Buddy\");\n+  const [filter, setFilter] = useState<\"Meal Buddy\" | \"Open to More \">(\"Meal Buddy ‚ù§Ô∏è\");\n   const [userId, setUserId] = useState<string | null>(null);\n   const [refreshing, setRefreshing] = useState(false);\n   const [loading, setLoading] = useState(true);\n \n@@ -60,9 +59,9 @@\n   const filteredMeals = meals.filter((m) => m.mealType === filter);\n \n   const handleJoin = (meal: Meal) => {\n     Alert.alert(\"Joined!\", \"You‚Äôve joined this meal event üéâ\");\n-    navigation.navigate(\"ChatRoom\", { mealId: meal.id, mealTitle: item.title,});\n+    navigation.navigate(\"ChatRoom\", { mealId: meal.id });\n   };\n \n   const handleAddMeal = (newMeal: Meal) => {\n     setMeals((prev) => [...prev, newMeal]);\n"
                },
                {
                    "date": 1749534246044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n import Toast from \"react-native-toast-message\";\n \n export default function MealListScreen() {\n   const [meals, setMeals] = useState<Meal[]>([]);\n-  const [filter, setFilter] = useState<\"Meal Buddy\" | \"Open to More \">(\"Meal Buddy ‚ù§Ô∏è\");\n+  const [filter, setFilter] = useState<\"Meal Buddyüç¥\" | \"Open to More \">(\"Meal Buddy‚ù§Ô∏è\");\n   const [userId, setUserId] = useState<string | null>(null);\n   const [refreshing, setRefreshing] = useState(false);\n   const [loading, setLoading] = useState(true);\n \n"
                },
                {
                    "date": 1749534294299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n import Toast from \"react-native-toast-message\";\n \n export default function MealListScreen() {\n   const [meals, setMeals] = useState<Meal[]>([]);\n-  const [filter, setFilter] = useState<\"Meal Buddyüç¥\" | \"Open to More \">(\"Meal Buddy‚ù§Ô∏è\");\n+  const [filter, setFilter] = useState<\"Meal Buddyüç¥\" | \"Open to More‚ù£Ô∏è\">(\"Meal Buddy\");\n   const [userId, setUserId] = useState<string | null>(null);\n   const [refreshing, setRefreshing] = useState(false);\n   const [loading, setLoading] = useState(true);\n \n"
                },
                {
                    "date": 1749534321531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n import Toast from \"react-native-toast-message\";\n \n export default function MealListScreen() {\n   const [meals, setMeals] = useState<Meal[]>([]);\n-  const [filter, setFilter] = useState<\"Meal Buddyüç¥\" | \"Open to More‚ù£Ô∏è\">(\"Meal Buddyüç¥\");\n+  const [filter, setFilter] = useState<\"Meal Buddy\" | \"Open to More\">(\"Meal Buddy\");\n   const [userId, setUserId] = useState<string | null>(null);\n   const [refreshing, setRefreshing] = useState(false);\n   const [loading, setLoading] = useState(true);\n \n"
                },
                {
                    "date": 1749535882694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import {\n+  View,\n+  Text,\n+  StyleSheet,\n+  FlatList,\n+  Pressable,\n+  Alert,\n+  ActivityIndicator,\n+  RefreshControl,\n+} from \"react-native\";\n+import { useEffect, useState } from \"react\";\n+import { useNavigation } from \"@react-navigation/native\";\n+import AsyncStorage from \"@react-native-async-storage/async-storage\";\n+import { db } from \"../firebase\";\n+import { ref, onValue } from \"firebase/database\";\n+import type { Meal } from \"../types\";\n+import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n+import type { RootStackParamList } from \"../types\";\n+import Toast from \"react-native-toast-message\";\n+\n+export default function MealListScreen() {\n+  const [meals, setMeals] = useState<Meal[]>([]);\n+  const [filter, setFilter] = useState<\"Meal Buddy\" | \"Open to More\">(\"Meal Buddy\");\n+  const [userId, setUserId] = useState<string | null>(null);\n+  const [refreshing, setRefreshing] = useState(false);\n+  const [loading, setLoading] = useState(true);\n+\n+  const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();\n+\n+  useEffect(() => {\n+    const fetchUser = async () => {\n+      let id = await AsyncStorage.getItem(\"userId\");\n+      if (!id) {\n+        id = `user-${Date.now()}`;\n+        await AsyncStorage.setItem(\"userId\", id);\n+      }\n+      setUserId(id);\n+    };\n+\n+    fetchUser();\n+  }, []);\n+\n+  useEffect(() => {\n+    const mealRef = ref(db, \"meals\");\n+    const unsubscribe = onValue(mealRef, (snapshot) => {\n+      const data = snapshot.val();\n+      if (data) {\n+        const mealArray = Object.values(data);\n+        setMeals(mealArray as Meal[]);\n+      } else {\n+        setMeals([]);\n+      }\n+      setLoading(false);\n+    });\n+\n+    return () => unsubscribe();\n+  }, []);\n+\n+  const filteredMeals = meals.filter((m) => m.mealType === filter);\n+\n+  const handleJoin = (meal: Meal) => {\n+    Alert.alert(\"Joined!\", \"You‚Äôve joined this meal event üéâ\");\n+    navigation.navigate(\"ChatRoom\", { mealId: meal.id, mealTitle: meal.title });\n+  };\n+\n+  const handleAddMeal = (newMeal: Meal) => {\n+    setMeals((prev) => [...prev, newMeal]);\n+  };\n+\n+  const onRefresh = async () => {\n+    setRefreshing(true);\n+    setTimeout(() => {\n+      setRefreshing(false);\n+      Toast.show({ type: \"success\", text1: \"List refreshed ‚úÖ\", visibilityTime: 1500 });\n+    }, 800);\n+  };\n+\n+  return (\n+    <View style={styles.container}>\n+      <Text style={styles.title}>üçΩÔ∏è Explore Meal Events</Text>\n+\n+      <View style={styles.toggleContainer}>\n+        <Pressable\n+          style={[styles.toggleButton, filter === \"Meal Buddy\" && styles.activeToggle]}\n+          onPress={() => setFilter(\"Meal Buddy\")}\n+        >\n+          <Text>üçú Meal Buddy</Text>\n+        </Pressable>\n+        <Pressable\n+          style={[styles.toggleButton, filter === \"Open to More\" && styles.activeToggle]}\n+          onPress={() => setFilter(\"Open to More\")}\n+        >\n+          <Text>‚ù§Ô∏è Open to More</Text>\n+        </Pressable>\n+      </View>\n+\n+      {loading ? (\n+        <ActivityIndicator size=\"large\" color=\"#007aff\" style={{ marginTop: 40 }} />\n+      ) : (\n+        <FlatList\n+          data={filteredMeals}\n+          keyExtractor={(item) => item.id}\n+          refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\n+          renderItem={({ item }) => (\n+            <View style={styles.mealCard}>\n+              <Text style={styles.mealTitle}>{item.title}</Text>\n+              <Text>üìç {item.location}</Text>\n+              <Text>üìÖ {item.date}</Text>\n+              <Text>‚è∞ {item.time}</Text>\n+              <Text>üí∞ {item.budget}</Text>\n+              <Text>üçΩÔ∏è {item.cuisine}</Text>\n+              <Text>üë• {item.people} / {item.max} people</Text>\n+\n+              <Pressable\n+                style={[\n+                  styles.joinButton,\n+                  item.people >= item.max && { backgroundColor: \"#ccc\" },\n+                ]}\n+                disabled={item.people >= item.max}\n+                onPress={() => handleJoin(item)}\n+              >\n+                <Text style={styles.joinButtonText}>\n+                  {item.people >= item.max ? \"Full\" : \"Join\"}\n+                </Text>\n+              </Pressable>\n+            </View>\n+          )}\n+        />\n+      )}\n+\n+      <Pressable\n+        style={styles.createButton}\n+        onPress={() => {\n+          if (userId) {\n+            navigation.navigate(\"CreateMeal\", {\n+              addMeal: handleAddMeal,\n+              userId,\n+            });\n+          }\n+        }}\n+      >\n+        <Text style={styles.createButtonText}>Ôºã Create Meal Event</Text>\n+      </Pressable>\n+    </View>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: { flex: 1, padding: 16, paddingTop: 40, backgroundColor: \"#fff\" },\n+  title: { fontSize: 24, fontWeight: \"bold\", marginBottom: 16 },\n+  toggleContainer: { flexDirection: \"row\", justifyContent: \"center\", gap: 10, marginBottom: 16 },\n+  toggleButton: {\n+    padding: 10,\n+    borderWidth: 1,\n+    borderColor: \"#ccc\",\n+    borderRadius: 8,\n+  },\n+  activeToggle: { backgroundColor: \"#d0ebff\" },\n+  mealCard: {\n+    backgroundColor: \"#f0f0f0\",\n+    padding: 16,\n+    borderRadius: 10,\n+    marginBottom: 12,\n+  },\n+  mealTitle: { fontSize: 16, fontWeight: \"600\", marginBottom: 4 },\n+  joinButton: {\n+    marginTop: 10,\n+    backgroundColor: \"#007aff\",\n+    paddingVertical: 8,\n+    borderRadius: 8,\n+    alignItems: \"center\",\n+  },\n+  joinButtonText: { color: \"#fff\", fontWeight: \"600\" },\n+  createButton: {\n+    backgroundColor: \"#ff7f50\",\n+    padding: 14,\n+    borderRadius: 10,\n+    alignItems: \"center\",\n+    marginTop: 16,\n+  },\n+  createButtonText: {\n+    color: \"#fff\",\n+    fontSize: 16,\n+    fontWeight: \"600\",\n+  },\n+});\n"
                }
            ],
            "date": 1748561916012,
            "name": "Commit-0",
            "content": "// screens/MealDetailScreen.tsx\nimport React from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { useNavigation } from \"@react-navigation/native\";\nimport type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport type { RootStackParamList } from \"../navigation/RootStackParamList\";\n\ntype NavProp = NativeStackNavigationProp<RootStackParamList, \"MealList\">;\nconst navigation = useNavigation<NavProp>();\n\nexport default function MealDetailScreen() {\n  const navigation = useNavigation();\n  const route = useRoute<any>();\n  const meal = route.params?.meal;\n\n  if (!meal) {\n    return <Text>Meal not found.</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{meal.restaurant}</Text>\n      <Text>Time: {meal.time}</Text>\n      <Text>Cuisine: {meal.cuisine}</Text>\n      <Text>Type: {meal.type === 'meal' ? 'Meal Buddy' : 'Open to More'}</Text>\n      <Text>üë• {meal.people} / {meal.max} people</Text>\n\n      <View style={{ marginTop: 20 }}>\n        <Button title=\"Join this Meal\" onPress={() => alert(\"Joined successfully!\")} />\n        <Button\n          title=\"Enter Chat Room\"\n          onPress={() => navigation.navigate('ChatRoom', { mealId: meal.id })}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { padding: 24 },\n  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 8 }\n});\n"
        }
    ]
}